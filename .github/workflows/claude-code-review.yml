name: Claude Code Review

on:
  # Comment-based triggers (like Cursor's Bugbot)
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  pull_request:
    types: [opened, synchronize]

  # Manual triggers via GitHub CLI
  workflow_dispatch:
    inputs:
      review_mode:
        description: 'Review mode to use'
        required: false
        default: 'hunt'
        type: choice
        options:
          - hunt
          - analyze
          - security
          - performance
          - review
      focus:
        description: 'Focus areas (comma-separated)'
        required: false
        default: 'bugs,security,performance'
        type: string
      verbose:
        description: 'Enable verbose output'
        required: false
        default: false
        type: boolean

jobs:
  # Handle workflow_dispatch by creating a comment to trigger Claude
  dispatch-trigger:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Find open PR
        id: find-pr
        run: ./.github/scripts/find-pr.sh "${{ github.ref_name }}" "${{ github.repository }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create trigger comment
        run: |
          COMMENT_BODY="codebot ${{ github.event.inputs.review_mode || 'hunt' }}"
          if [ "${{ github.event.inputs.verbose }}" = "true" ]; then
            COMMENT_BODY="$COMMENT_BODY verbose"
          fi

          gh pr comment ${{ steps.find-pr.outputs.pr_number }} --repo ${{ github.repository }} --body "$COMMENT_BODY"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  claude:
    # Only run on comment triggers or specific PR conditions
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, 'codebot')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, 'codebot')) ||
      (github.event_name == 'pull_request' && (
        github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' ||
        contains(github.event.pull_request.title, '[auto-review]')
      ))

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Parse comment command
        id: parse-command
        run: ./.github/scripts/parse-comment.sh "${{ github.event.comment.body }}" "${{ github.event_name }}"



      - name: Run Claude Code Review
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Optional: Add specific tools for running tests or linting
          # allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"

          # Dynamic prompt based on review mode
          direct_prompt: |
            ${{ steps.parse-command.outputs.mode == 'hunt' && format('
            🕵️ BUG HUNT MODE - Find potential issues quickly:
            - Focus on critical bugs, security vulnerabilities, and performance issues
            - Prioritize high-impact problems over style suggestions
            - Be concise and actionable
            - Provide clear, actionable feedback
            ') || '' }}

            ${{ steps.parse-command.outputs.mode == 'analyze' && format('
            📊 ANALYSIS MODE - Deep technical analysis:
            - Analyze architecture, patterns, and design decisions
            - Evaluate code complexity and maintainability
            - Assess test coverage and quality
            - Provide strategic recommendations
            - Consider long-term implications and scalability
            ') || '' }}

            ${{ steps.parse-command.outputs.mode == 'security' && format('
            🔒 SECURITY MODE - Security-focused review:
            - Identify security vulnerabilities and compliance issues
            - Check for proper authentication and authorization
            - Validate input sanitization and output encoding
            - Review encryption and key management
            - Assess data protection and privacy concerns
            ') || '' }}

            ${{ steps.parse-command.outputs.mode == 'performance' && format('
            ⚡ PERFORMANCE MODE - Performance optimization review:
            - Identify performance bottlenecks and optimization opportunities
            - Analyze resource usage and efficiency
            - Check for memory leaks and scalability issues
            - Review caching strategies and database queries
            - Consider load testing and monitoring needs
            ') || '' }}

            ${{ steps.parse-command.outputs.mode == 'review' && format('
            📝 STANDARD REVIEW MODE - Comprehensive code review:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage and quality

            Focus areas: {0}
            Verbose output: {1}

            Be constructive and helpful.
            ', steps.parse-command.outputs.focus, steps.parse-command.outputs.verbose) || '' }}

          # Use sticky comments for better UX
          use_sticky_comment: true

      - name: Workflow Summary
        if: always()
        run: |
          echo "## 🤖 Claude Code Review Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Review Mode:** \`${{ steps.parse-command.outputs.mode }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Focus Areas:** \`${{ steps.parse-command.outputs.focus }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Verbose Output:** \`${{ steps.parse-command.outputs.verbose }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📝 Available Commands" >> $GITHUB_STEP_SUMMARY
          echo "Comment any of these in PRs to trigger specific review types:" >> $GITHUB_STEP_SUMMARY
          echo "- \`codebot hunt\` - Quick bug detection (like Bugbot)" >> $GITHUB_STEP_SUMMARY
          echo "- \`codebot analyze\` - Deep technical analysis" >> $GITHUB_STEP_SUMMARY
          echo "- \`codebot security\` - Security-focused review" >> $GITHUB_STEP_SUMMARY
          echo "- \`codebot performance\` - Performance optimization review" >> $GITHUB_STEP_SUMMARY
          echo "- \`codebot review\` - Comprehensive review" >> $GITHUB_STEP_SUMMARY
          echo "- \`codebot\` - Defaults to hunt mode" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Manual Triggers" >> $GITHUB_STEP_SUMMARY
          echo "Run via GitHub CLI:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "gh workflow run claude-code-review.yml -f review_mode=hunt" >> $GITHUB_STEP_SUMMARY
          echo "gh workflow run claude-code-review.yml -f review_mode=security -f verbose=true" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
